<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub Pages + Hexo + NexT 个人博客搭建</title>
    <url>/2021/03/06/gitpage-hexo-next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>这篇文章将分享一个从零开始的自建个人博客网站的过程。</p>
<span id="more"></span>

<h1 id="开始前的一些话"><a href="#开始前的一些话" class="headerlink" title="开始前的一些话"></a>开始前的一些话</h1><h2 id="为什么要建个人博客？"><a href="#为什么要建个人博客？" class="headerlink" title="为什么要建个人博客？"></a>为什么要建个人博客？</h2><p>让自己养成写博客的好习惯。</p>
<p>记录一下自己的学习过程。</p>
<h2 id="为什么选择自建"><a href="#为什么选择自建" class="headerlink" title="为什么选择自建?"></a>为什么选择自建?</h2><p>市面上虽然已经有了像简书、 CSND 、博客园等成熟的内容创作平台，但是我还是选择了自建个人博客。主要原因在于那些平台广告繁杂、还有太多我用不到的功能，每次我看到了都感到很厌烦。</p>
<p>我的要求很简单：方便写作、方便查找、看着舒服。</p>
<p>因此我选择自建博客，仅加入我自己需要的功能，一切从简。</p>
<h2 id="为什么选择这套技术方案？"><a href="#为什么选择这套技术方案？" class="headerlink" title="为什么选择这套技术方案？"></a>为什么选择这套技术方案？</h2><p>GitHub Pages 技术平台， Hexo 博客框架， NexT 主题。</p>
<h3 id="为什么是-GitHub-Pages-？"><a href="#为什么是-GitHub-Pages-？" class="headerlink" title="为什么是 GitHub Pages ？"></a>为什么是 GitHub Pages ？</h3><p><strong>免费</strong>、<strong>轻量级</strong>、<strong>支持 Markdown</strong></p>
<p>GitHub Pages 可以免费使用，可以直接在上面部署，不需要自己去租用一台服务器。</p>
<p>我本人习惯在本地用 Markdown 写一些记录，因此 GitHub Pages 恰好符合我的需求。</p>
<h3 id="为什么是-Hexo-？"><a href="#为什么是-Hexo-？" class="headerlink" title="为什么是 Hexo ？"></a>为什么是 Hexo ？</h3><p>正如 Hexo 官网所介绍的， Hexo 是一个快速、简洁且高效的博客框架，高度符合我的需求。</p>
<h3 id="为什么是NexT？"><a href="#为什么是NexT？" class="headerlink" title="为什么是NexT？"></a>为什么是NexT？</h3><p>主题这种东西就是仁者见仁智者见智的了。 NexT 精致简约，符合我的审美。</p>
<h1 id="从零开始"><a href="#从零开始" class="headerlink" title="从零开始"></a>从零开始</h1><h2 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h2><h3 id="注册-GitHub-账号"><a href="#注册-GitHub-账号" class="headerlink" title="注册 GitHub 账号"></a>注册 GitHub 账号</h3><p>想要使用 GitHub Pages ，首先当然是要得有一个 GitHub 账号了。</p>
<p>如果没有账号可以登录 <a href="https://github.com/">GitHub</a> ，点击 Sign up ，注册一个新的账号。</p>
<p><img src="/2021-03-06-gitpage-hexo-next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20210306155928881.png" alt="GitHub注册界面"></p>
<h3 id="创建-GitHub-Pages"><a href="#创建-GitHub-Pages" class="headerlink" title="创建 GitHub Pages"></a>创建 GitHub Pages</h3><p>1.登录自己的 GitHub 账号。</p>
<p>2.创建一个新的公开的仓库，将其命名为 <em>username.github.io</em> ，这里的 username 是你的用户名。（如果命名不符合上述规则，则无法正确部署）。</p>
<p>3.通过 <em>username.github.io</em> 就可以访问你的网站了。</p>
<p>详细信息可以访问<a href="https://pages.github.com/">GitHub Pages</a>。</p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>根据<a href="https://hexo.io/zh-cn/docs/">Hexo文档</a>配置环境并安装Hexo。</p>
<h3 id="本地建站"><a href="#本地建站" class="headerlink" title="本地建站"></a>本地建站</h3><p>根据<a href="https://hexo.io/zh-cn/docs/setup">Hexo建站文档</a>在本地建站。</p>
<h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="文章中插入图片"><a href="#文章中插入图片" class="headerlink" title="文章中插入图片"></a>文章中插入图片</h3><h3 id="文章中插入数学公式"><a href="#文章中插入数学公式" class="headerlink" title="文章中插入数学公式"></a>文章中插入数学公式</h3><p>在使用Typora的过程中发现在本地通过<code>$$</code>插入的 Latex 公式无法在网页端正常显示，可以通过以下方式解决。</p>
<p>①编辑 <strong>主题配置文件</strong>（*/themes/next/_config.yml*）， 将 <code>mathjax</code> 下的 <code>enable</code> 设定为 <code>true</code> 。</p>
<p>②在文章的<code>Front-matter</code>中加入<code>mathjax: true</code>。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;[LeetCode]21.合并两个有序链表&quot;</span><br><span class="line">date: 2021-03-08 18:46:16</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>完成上述配置即可在网页端正常显示 Latex 公式。</p>
<h3 id="站内文章链接"><a href="#站内文章链接" class="headerlink" title="站内文章链接"></a>站内文章链接</h3><p>如果想要在文章中链接站内的其他文章，可以采用以下格式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% post_link 文章标题%&#125;</span><br></pre></td></tr></table></figure>

<p>例如我需要在这篇文章中需要链接以下文章</p>
<p><img src="/2021-03-06-gitpage-hexo-next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20210310113319383.png" alt="image-20210310113319383"></p>
<p>可以在需要链接的地方插入以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% post_link leetcode21%&#125;</span><br></pre></td></tr></table></figure>

<p>插入后效果如下图所示</p>
<p><img src="/2021-03-06-gitpage-hexo-next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20210310113906404.png" alt="image-20210310113906404"></p>
<p><strong>注意：</strong></p>
<p>关于文章标题，这里为什么是 <code>leetcode21</code>，而不是 <code>2021-03-08-leetcode21</code>？这是因为这篇文章是使用 <code>hexo new leetcode21</code> 的命令创建的，由于之前设置了自动在创建时在标题上加入了时间，以便于本地管理，但实际上文章的标题是不包含时间的。</p>
]]></content>
      <categories>
        <category>技术分享</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>GitHub Page</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo部署中Spawn failed报错及其解决方案</title>
    <url>/2021/03/08/Hexo-Spawn-failed%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p>本文将介绍 Hexo 在部署过程中出现 <code>Spawn failed</code> 报错的原因以及解决方法。</p>
<span id="more"></span>



<p>近期在将本地博客部署至 GitHub 上时遇到了 <code>Spawn failed</code> 报错，经过资料搜索发现了报错产生的原因以及解决方法。</p>
<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在使用 <code>hexo deploy</code> 命令将博客部署到 <code>GitHub</code> 上时遇到了 <code>Spawn failed</code> 的报错，报错形式如下图所示。</p>
<p><img src="/2021/03/08/Hexo-Spawn-failed%E6%8A%A5%E9%94%99/spawn.png" alt="spawn"></p>
<h1 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h1><p>在本地任务目录下有一个 <code>.deploy_git</code> 文件夹，这个文件夹是本地 git 仓库，<code>hexo deploy</code> 命令就是将这个文件夹的内容 push 到 GitHub 上部署的。</p>
<p>本人是在部署过程中由于网络问题导致出现本地 git 仓库完成更新，但是在 GitHub 上的远程仓库更新并未完成的情况。此后本地 git 版本号与 GitHub 上版本号不一致导致此报错发生。</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>只需要将本地仓库版本回滚到和 GitHub 仓库版本一致即可。</p>
<h2 id="①查看-GitHub-仓库版本"><a href="#①查看-GitHub-仓库版本" class="headerlink" title="①查看 GitHub 仓库版本"></a>①查看 GitHub 仓库版本</h2><p><img src="/2021/03/08/Hexo-Spawn-failed%E6%8A%A5%E9%94%99/image-20210308233033569.png" alt="image-20210308233033569"></p>
<h2 id="②查看本地仓库版本"><a href="#②查看本地仓库版本" class="headerlink" title="②查看本地仓库版本"></a>②查看本地仓库版本</h2><p>本地仓库版本更变信息可以在 <code>.deploy_git/.git/logs/HEAD</code>中查看。</p>
<p>例如我本地最后一次成功更新的信息如下所示，可以通过时间以及版本号来查看是否与 GitHub 仓库相同。</p>
<p><img src="/2021/03/08/Hexo-Spawn-failed%E6%8A%A5%E9%94%99/image-20210308233451795.png" alt="image-20210308233451795"></p>
<p>在此条记录后的所有提交信息在远程仓库上都是失败的。</p>
<p>此后由于本地版本和远程仓库版本不同，导致此后所有的提交操作均失败。</p>
<h2 id="③本地仓库回滚"><a href="#③本地仓库回滚" class="headerlink" title="③本地仓库回滚"></a>③本地仓库回滚</h2><p>为了使得本地仓库与远程仓库版本保持一致，我们只需通过以下命令将本地仓库回滚即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git reset --hard commitId</span><br><span class="line"><span class="meta">#</span><span class="bash"> commitId 为需要回滚到的版本号</span></span><br></pre></td></tr></table></figure>

<h2 id="④重新部署"><a href="#④重新部署" class="headerlink" title="④重新部署"></a>④重新部署</h2><p>重新执行命令 <code>hexo deploy</code> 部署博客，即可解决问题。</p>
<p>本文参考：<a href="https://perry96.com/archives/882898e3.html">https://perry96.com/archives/882898e3.html</a></p>
]]></content>
      <categories>
        <category>技术分享</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
